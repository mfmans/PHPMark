<?php

/*
	$ [PHPMark2]   /call/t16.php , 150216   (C) 2005-2015 MF
*/


require_once './phpmark.php';



// ===== 0 ===================================================================

	$k	= 0;
	$v	= 0;

	$d	= array_fill (0, 100000, 0);

// ===== 0 ===================================================================



PHPMark::BaseBegin ( );

// ===== 1 ===================================================================

// ===== 1 ===================================================================

PHPMark::BaseEnd ( );



PHPMark::TestBegin ( );

// ===== 2 ===================================================================

	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);
	foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v); foreach($d as $k=>$v);

// ===== 2 ===================================================================

PHPMark::TestEnd ( );



PHPMark::Mark ( );
PHPMark::Data (1000, count ($d), 'Ent/s');

exit;

