<?php

/*
	$ [PHPMark2]   /call/t6.php , 150216   (C) 2005-2015 MF
*/


require_once './phpmark.php';



// ===== 0 ===================================================================

	$d	= PHPMark::Resource ('32768');

	$d	= $d.$d.$d.$d.$d.$d.$d.$d.
		  $d.$d.$d.$d.$d.$d.$d.$d.
		  $d.$d.$d.$d.$d.$d.$d.$d.
		  $d.$d.$d.$d.$d.$d.$d.$d;

// ===== 0 ===================================================================



PHPMark::BaseBegin ( );

// ===== 1 ===================================================================

// ===== 1 ===================================================================

PHPMark::BaseEnd ( );



PHPMark::TestBegin ( );

// ===== 2 ===================================================================

	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);
	sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d); sha1($d);

// ===== 2 ===================================================================

PHPMark::TestEnd ( );



PHPMark::Mark ( );
PHPMark::Data (2000, 1048576, 'B/s');

exit;

